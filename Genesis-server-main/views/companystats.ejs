<head>
    <title>User Policy Dashboard</title>
    <style>
        .container1 {
            display: flex;
            flex-wrap: wrap;
            align-items: center;
            justify-content: center;
            height: 400px;
            border: 1px solid #ccc;
            padding: 20px;
            box-sizing: border-box;
            position: relative;
        }

        .category {
            flex: 1;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: flex-end;
            height: 100%;
            margin: 0 10px;
            position: relative;
            z-index: 1;
        }

        .category .bar {
            width: 50px;
            background-color: #3E54AC;
            margin-bottom: 10px;
            height: 0;
            transition: height 1s ease;
            position: relative;
            z-index: 1;
        }

        .category .label {
            font-size: 14px;
            font-weight: bold;
            color: #333;
            margin-bottom: 10px;
            position: relative;
            z-index: 1;
        }

        .loading {
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            display: flex;
            align-items: center;
            justify-content: center;
            position: absolute;
            top: 0;
            left: 0;
            z-index: 2;
        }

        .loading::after {
            content: attr(data-value);
            width: 50px;
            height: 50px;
            border-radius: 50%;
            border: 3px solid #fff;
            border-top-color: #3E54AC;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            to {
                transform: rotate(360deg);
            }
        }

        .container::after {
            content: 'Total Users';
            position: absolute;
            top: 0;
            left: -60px;
            font-size: 14px;
            color: #333;
            writing-mode: vertical-lr;
            transform: rotate(-180deg);
        }

        .value1,
        .value2,
        .value3,
        .value4 {
            font-size: medium;
            font-size: 25px;
            font-weight: 500;
        }

        .bar:hover::before {
            content: attr(data-value);
            position: absolute;
            top: -25px;
            left: -25px;
            width: 50px;
            height: 20px;
            background-color: rgba(0, 0, 0, 0.7);
            color: #fff;
            font-size: 14px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 5px;
            pointer-events: none;
            z-index: 3;
            animation: fadeIn 1s ease;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>
</head>
<%- include('navbar.ejs') %>
<h1 style="text-align: center;color: #3E54AC;">Company Stats(Origin to 2023)</h1>
<h5 style="text-align: center;color: #3e54acb2">representing the unity</h5>
    <div class="container1">
        <div class="category">
            <div class="bar" id="total-users"></div>
            <div class="label">Total Users<br><span class="value1"></span></div>
        </div>
        <div class="category">
            <div class="bar" id="transport-policy"></div>
            <div class="label">Transport Policy<br><span class="value2"></span></div>
        </div>
        <div class="category">
            <div class="bar" id="life-policy"></div>
            <div class="label">Life Policy<br><span class="value3"></span></div>
        </div>
        <div class="category">
            <div class="bar" id="health-policy"></div>
            <div class="label">Health Policy<br><span class="value4"></span></div>
        </div>
    </div>

<!--    <script>-->
<!--        // Get data from server-->
<!--        fetch('/data')-->
<!--            .then(response => response.json())-->
<!--            .then(data => {-->
<!--                // Set heights of bars based on data-->
<!--                const totalUsersBar = document.getElementById('total-users');-->
<!--                const transportPolicyBar = document.getElementById('transport-policy');-->
<!--                const lifePolicyBar = document.getElementById('life-policy');-->
<!--                const healthPolicyBar = document.getElementById('health-policy');-->

<!--                const totalUsers = data.total_users;-->
<!--                const transportPolicyUsers = data.transport_policy_users;-->
<!--                const lifePolicyUsers = data.life_policy_users;-->
<!--                const healthPolicyUsers = data.health_policy_users;-->

<!--                totalUsersBar.style.height = (totalUsers / totalUsers) * 100 + '%';-->

<!--                transportPolicyBar.style.height = (transportPolicyUsers / totalUsers) * 100 + '%';-->
<!--                lifePolicyBar.style.height = (lifePolicyUsers / totalUsers) * 100 + '%';-->
<!--                healthPolicyBar.style.height = (healthPolicyUsers / totalUsers) * 100 + '%';-->

<!--                totalUsersBar.setAttribute('data-value', totalUsers);-->
<!--                transportPolicyBar.setAttribute('data-value', transportPolicyUsers);-->
<!--                lifePolicyBar.setAttribute('data-value', lifePolicyUsers);-->
<!--                healthPolicyBar.setAttribute('data-value', healthPolicyUsers);-->


<!--                //  document.querySelector('.value1').textContent = totalUsers-->
<!--                //  document.querySelector('.value2').textContent =  transportPolicyUsers-->
<!--                //  document.querySelector('.value3').textContent = lifePolicyUsers-->
<!--                //  document.querySelector('.value4').textContent =  healthPolicyUsers-->


<!--                let totalUsersCount = 0;-->
<!--                let transportPolicyCount = 0;-->
<!--                let lifePolicyCount = 0;-->
<!--                let healthPolicyCount = 0;-->

<!--                setInterval(() => {-->
<!--                    totalUsersCount=totalUsersCount+1;-->
<!--                    transportPolicyCount=transportPolicyCount+1;-->
<!--                    lifePolicyCount=lifePolicyCount+1;-->
<!--                    healthPolicyCount=healthPolicyCount+1;-->

<!--                    if (totalUsersCount <= totalUsers) {-->
<!--                        document.querySelector('.value1').textContent = totalUsersCount;-->
<!--                    }-->
<!--                    if (transportPolicyCount <= transportPolicyUsers) {-->
<!--                        document.querySelector('.value2').textContent = transportPolicyCount;-->
<!--                    }-->
<!--                    if (lifePolicyCount <= lifePolicyUsers) {-->
<!--                        document.querySelector('.value3').textContent = lifePolicyCount;-->
<!--                    }-->
<!--                    if (healthPolicyCount <= healthPolicyUsers) {-->
<!--                        document.querySelector('.value4').textContent = healthPolicyCount;-->
<!--                    }-->
<!--                }, 100); // Update values every 10 milliseconds-->
<!--            })-->

<!--            .catch(error => console.log(error));-->
<!--    </script>-->

<script>
    // Create an XMLHttpRequest object
    var xhr = new XMLHttpRequest();

    // Define the request method and URL
    xhr.open("GET", "/data", true);

    // Set up a callback function to handle the response
    xhr.onreadystatechange = function () {
        // Check if the request is complete and successful (status code 200)
        if (xhr.readyState == 4 && xhr.status == 200) {
            // Parse the JSON response
            var data = JSON.parse(xhr.responseText);

            // Set heights of bars based on data
            const totalUsersBar = document.getElementById('total-users');
            const transportPolicyBar = document.getElementById('transport-policy');
            const lifePolicyBar = document.getElementById('life-policy');
            const healthPolicyBar = document.getElementById('health-policy');

            const totalUsers = data.total_users;
            const transportPolicyUsers = data.transport_policy_users;
            const lifePolicyUsers = data.life_policy_users;
            const healthPolicyUsers = data.health_policy_users;

            totalUsersBar.style.height = (totalUsers / totalUsers) * 100 + '%';
            transportPolicyBar.style.height = (transportPolicyUsers / totalUsers) * 100 + '%';
            lifePolicyBar.style.height = (lifePolicyUsers / totalUsers) * 100 + '%';
            healthPolicyBar.style.height = (healthPolicyUsers / totalUsers) * 100 + '%';

            totalUsersBar.setAttribute('data-value', totalUsers);
            transportPolicyBar.setAttribute('data-value', transportPolicyUsers);
            lifePolicyBar.setAttribute('data-value', lifePolicyUsers);
            healthPolicyBar.setAttribute('data-value', healthPolicyUsers);

            let totalUsersCount = 0;
            let transportPolicyCount = 0;
            let lifePolicyCount = 0;
            let healthPolicyCount = 0;

            setInterval(() => {
                totalUsersCount = totalUsersCount + 1;
                transportPolicyCount = transportPolicyCount + 1;
                lifePolicyCount = lifePolicyCount + 1;
                healthPolicyCount = healthPolicyCount + 1;

                if (totalUsersCount <= totalUsers) {
                    document.querySelector('.value1').textContent = totalUsersCount;
                }
                if (transportPolicyCount <= transportPolicyUsers) {
                    document.querySelector('.value2').textContent = transportPolicyCount;
                }
                if (lifePolicyCount <= lifePolicyUsers) {
                    document.querySelector('.value3').textContent = lifePolicyCount;
                }
                if (healthPolicyCount <= healthPolicyUsers) {
                    document.querySelector('.value4').textContent = healthPolicyCount;
                }
            }, 100); // Update values every 10 milliseconds
        }
    };

    // Send the request
    xhr.send();
</script>

    <%- include('footer.ejs') %>